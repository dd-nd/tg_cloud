from telebot import types
import telebot
import sqlite3 as sq

bot = telebot.TeleBot('TOKEN')

def webAppKeyboard(): #—Å–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å webapp –∫–Ω–æ–ø–∫–æ–π
   keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True) #—Å–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
   webAppAdd = types.WebAppInfo("https://telegram.mihailgok.ru") #—Å–æ–∑–¥–∞–µ–º webappinfo - —Ñ–æ—Ä–º–∞—Ç —Ö—Ä–∞–Ω–µ–Ω–∏—è url
   webAppEdit = types.WebAppInfo("https://games.mihailgok.ru") #—Å–æ–∑–¥–∞–µ–º webappinfo - —Ñ–æ—Ä–º–∞—Ç —Ö—Ä–∞–Ω–µ–Ω–∏—è url
   one_butt = types.KeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å", web_app=webAppAdd) #—Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É —Ç–∏–ø–∞ webapp
   two_butt = types.KeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å", web_app=webAppEdit) #—Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É —Ç–∏–ø–∞ webapp
   keyboard.add(one_butt, two_butt) #–¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É

   return keyboard #–≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É

# def webAppKeyboardInline():
#    keyboard = types.InlineKeyboardMarkup(row_width=1) #—Å–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É inline
#    webApp = types.WebAppInfo("https://telegram.mihailgok.ru") #—Å–æ–∑–¥–∞–µ–º webappinfo - —Ñ–æ—Ä–º–∞—Ç —Ö—Ä–∞–Ω–µ–Ω–∏—è url
#    one = types.InlineKeyboardButton(text="–í–µ–± –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", web_app=webApp) #—Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É —Ç–∏–ø–∞ webapp
#    keyboard.add(one) #–¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É

#    return keyboard #–≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É


@bot.message_handler(commands=['start']) #–æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É —Å—Ç–∞—Ä—Ç
def start_fun(message):
    with sq.connect('db/database.db') as con: 
        cur = con.cursor()
        user_id = message.from_user.id
        user_nickname = message.from_user.username
        try:
            cur.execute(f'INSERT INTO users (id, name) VALUES ("{user_id}", "{user_nickname}")')
            bot.send_message( message.chat.id, '–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–Ω—ã!\n–ú–æ–∂–µ—Ç–µ –Ω–∞—á–∏–Ω–∞—Ç—å –Ω–∞–ø–æ–ª–Ω—è—Ç—å —Å–≤–æ–π —Å–ø–∏—Å–æ–∫ü§ó', parse_mode="Markdown", reply_markup=webAppKeyboard())
        except sq.IntegrityError:
            bot.send_message( message.chat.id, '–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–Ω—ã!\n–ú–æ–∂–µ—Ç–µ –Ω–∞–ø–æ–ª–Ω—è—Ç—å —Å–≤–æ–π —Å–ø–∏—Å–æ–∫ü§ó', parse_mode="Markdown", reply_markup=webAppKeyboard())


@bot.message_handler(content_types="text")
def new_mes(message):
    bot.send_message( message.chat.id, '–î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –Ω–∞–∂–º–∏—Ç–µ "–î–æ–±–∞–≤–∏—Ç—å" –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –Ω—É–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ', parse_mode="Markdown", reply_markup=webAppKeyboard())


@bot.message_handler(content_types="web_app_data") #–ø–æ–ª—É—á–∞–µ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ 
def answer(webAppMes):
   print(webAppMes) #–≤—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–æ–±—â–µ–Ω–∏–∏
   print(webAppMes.web_app_data.data) #–∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ —Ç–æ —á—Ç–æ –º—ã –ø–µ—Ä–µ–¥–∞–ª–∏ –≤ –±–æ—Ç–∞
   bot.send_message(webAppMes.chat.id, f"–ø–æ–ª—É—á–∏–ª–∏ –∏–Ω–æ—Ñ—Ä–º–∞—Ü–∏—é –∏–∑ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {webAppMes.web_app_data.data}") 

if __name__ == '__main__':
   bot.infinity_polling()
